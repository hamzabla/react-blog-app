{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","map","blog","id","author","useFetch","url","abortCont","AbortController","useState","data","setData","isPending","setIsPending","error","setError","useEffect","setTimeout","fetch","signal","then","res","ok","Error","json","dayta","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ae62650.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <h1>Blog app</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\">New Blog</Link>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({ blogs,title }) => {\r\n\r\n    return ( \r\n        <div className=\"blog-list\">\r\n            <h2>{title}</h2>\r\n            {blogs.map(blog => (\r\n        <div className=\"blog-preview\" key={blog.id} >\r\n          <Link to={`/blogs/${blog.id}`}>\r\n            <h2>{ blog.title }</h2>\r\n            <p>Written by { blog.author }</p>\r\n          </Link>\r\n         \r\n        </div>\r\n      ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogList;","import { useState,useEffect } from \"react\";\r\n\r\nconst useFetch = (url) =>{\r\n    \r\n    const abortCont = new AbortController();\r\n\r\n    const [data, setData] = useState(null);\r\n    const [isPending,setIsPending] = useState(true);\r\n    const [error,setError] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n         fetch(url, {signal: abortCont.signal})\r\n         .then(res=>{\r\n           if(!res.ok){\r\n             throw Error(\"Couldn't fetch the data for that resource\");\r\n           }\r\n           return res.json();\r\n         })\r\n         .then(dayta=>{\r\n           setData(dayta);\r\n           setIsPending(false);\r\n           setError(null);\r\n         })\r\n         .catch(err=>{\r\n             if(err.name === 'AbortError'){\r\n                 console.log('fetch aborted');\r\n             }\r\n           setIsPending(false);\r\n           setData(null);\r\n           setError(err.message);\r\n         })\r\n      },1000);\r\n      return ()=> abortCont.abort();\r\n     },[url]);\r\n\r\n     return {data,isPending,error};\r\n}\r\n\r\nexport default useFetch;","import BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n      const { data: blogs,isPending,error } = useFetch(\"http://localhost:8000/blogs\");\r\n    return ( \r\n        <div className=\"home\">\r\n          {error && <div>{error}</div>}\r\n          {isPending && <div>Loading...</div>}\r\n         {blogs && <BlogList blogs={blogs} title='All Blogs' />}\r\n    </div>\r\n     );\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Create = () => {\r\n   \r\n     const [title,setTitle]=useState('');\r\n     const [body,setBody]=useState('');\r\n     const [author,setAuthor]=useState('mario');\r\n     const [isPending,setIsPending]=useState(false);\r\n     const history = useHistory();\r\n\r\n     const handleSubmit = (e) =>{\r\n        e.preventDefault(); //to prevent refreshing the page after we submit it\r\n        const blog = {title,body,author};\r\n\r\n        setIsPending(true);\r\n        \r\n        fetch('http://localhost:8000/blogs',{\r\n           method: \"POST\",\r\n           headers: {\"Content-type\": \"application/json\"},\r\n           body: JSON.stringify(blog)\r\n        })\r\n        .then( () =>{\r\n         console.log('new blog added');\r\n         setIsPending(false);\r\n         //history.go(-1); to go to the previous page\r\n         history.push('/');\r\n        });\r\n\r\n        \r\n\r\n\r\n     };\r\n\r\n    return ( \r\n        <div className=\"create\">\r\n            <h2>Add a New Blog</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Blog title: </label>\r\n                <input \r\n                type=\"text\" \r\n                required\r\n                value={title}\r\n                onChange={(e)=>setTitle(e.target.value)} // to track what the user type\r\n                />\r\n                <label>Blog body: </label>\r\n                <textarea\r\n                required\r\n                value={body}\r\n                onChange={(e)=>setBody(e.target.value)}\r\n                >\r\n                </textarea>\r\n                <label>Blog author: </label>\r\n                <select\r\n                value={author}\r\n                onChange={(e)=>setAuthor(e.target.value)}\r\n                >\r\n                    <option value=\"mario\">mario</option>\r\n                    <option value=\"yoshi\">yoshi</option>\r\n                </select>\r\n                {!isPending && <button>Add Blog</button>}\r\n                {isPending && <button disabled>Adding Blog...</button>}\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst BlogDetails = () => {\r\n   \r\n    const { id } = useParams();\r\n    const { data: blog,error,isPending } = useFetch('http://localhost:8000/blogs/'+id);\r\n    const history = useHistory();\r\n   \r\n    const handleClick = () =>{\r\n       fetch('http://localhost:8000/blogs/'+id,{\r\n           method: 'Delete', \r\n       }).then( () =>{\r\n           history.push('/');\r\n       })\r\n    }\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            {isPending && <div>Loading..</div>}\r\n            {error && <div>{error}</div>}\r\n            {blog && (\r\n            <article>\r\n                <h2>{blog.title}</h2>\r\n                <p><strong>Written by {blog.author}</strong></p>\r\n                <div>{blog.body}</div>\r\n                <button onClick={handleClick}>Delete</button>\r\n            </article>\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <div className=\"not-found\">\r\n            <h2>Sorry :( </h2>\r\n            <p>That page cannot be found</p>\r\n            <Link to='/'>Back to the Home page</Link>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\">\n             <Home />\n          </Route>\n          <Route path=\"/create\">\n             <Create />\n          </Route>\n          <Route path=\"/blogs/:id\">\n             <BlogDetails />\n          </Route>\n          <Route path=\"*\">  {/*catch path if no other path exist*/}\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}